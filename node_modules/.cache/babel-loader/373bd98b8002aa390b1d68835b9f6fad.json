{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Nino\\\\Downloads\\\\meme-gen-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\Users\\\\Nino\\\\Downloads\\\\meme-gen-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\Users\\\\Nino\\\\Downloads\\\\meme-gen-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Nino\\\\Downloads\\\\meme-gen-master\\\\src\\\\Meme.js\";\nimport React, { useState, useEffect } from 'react';\nimport './Meme.css';\nimport Draggable from 'react-draggable';\n\nfunction Meme() {\n  // const [memeImage,setMemeImage] = useState(\"\");\n  var _useState = useState({\n    topText: \"\",\n    bottomText: \"\",\n    randomImage: \"http://i.imgflip.com/1bij.jpg\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      meme = _useState2[0],\n      setMeme = _useState2[1];\n\n  var textHandler = function textHandler(event) {\n    var _event$target = event.target,\n        name = _event$target.name,\n        value = _event$target.value;\n    setMeme(function (prevMeme) {\n      return _objectSpread({}, prevMeme, _defineProperty({}, name, value));\n    });\n  };\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      allMemes = _useState4[0],\n      setAllMemes = _useState4[1];\n\n  useEffect(function () {\n    fetch(\"https://api.imgflip.com/get_memes\").then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      return setAllMemes(data.data.memes);\n    });\n  }, []);\n\n  var getMemeImage = function getMemeImage(e) {\n    e.preventDefault();\n    var randomNumber = Math.floor(Math.random() * allMemes.length);\n    var url = allMemes[randomNumber].url;\n    console.log(url);\n    setMeme(function (prevMeme) {\n      return _objectSpread({}, prevMeme, {\n        randomImage: url\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"meme\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    action: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"topText\",\n    type: \"text\",\n    className: \"meme__inputs\",\n    placeholder: \"Top Text\",\n    onChange: textHandler,\n    value: meme.topText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"bottomText\",\n    type: \"text\",\n    className: \"meme__inputs\",\n    placeholder: \"Bottom Text\",\n    onChange: textHandler,\n    value: meme.bottomText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: getMemeImage,\n    className: \"meme__button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, \"Get a new meme image  \\uD83D\\uDDBC\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"meme__wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"meme__image\",\n    src: meme.randomImage,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"meme--text top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 14\n    }\n  }, meme.topText), /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"meme--text bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, meme.bottomText))));\n}\n\nexport default Meme;","map":{"version":3,"names":["React","useState","useEffect","Draggable","Meme","topText","bottomText","randomImage","meme","setMeme","textHandler","event","target","name","value","prevMeme","allMemes","setAllMemes","fetch","then","res","json","data","memes","getMemeImage","e","preventDefault","randomNumber","Math","floor","random","length","url","console","log"],"sources":["C:/Users/Nino/Downloads/meme-gen-master/src/Meme.js"],"sourcesContent":["import React, { useState,useEffect } from 'react';\nimport './Meme.css';\nimport Draggable from 'react-draggable';\n\n\nfunction Meme() {\n    // const [memeImage,setMemeImage] = useState(\"\");\n    const [meme, setMeme] = useState({\n        topText :\"\",\n        bottomText :\"\",\n        randomImage:\"http://i.imgflip.com/1bij.jpg\"\n    });\n\n    const textHandler =(event) =>{\n        const {name,value} = event.target;\n        setMeme(prevMeme => {\n            return { ...prevMeme,\n                [name]:value\n            }\n        })\n    }\n\n    const [allMemes, setAllMemes] = useState([]);\n    \n    useEffect(()=>{\n        fetch(\"https://api.imgflip.com/get_memes\")\n            .then(res=> res.json())\n            .then(data =>setAllMemes(data.data.memes))\n    },[])\n    \n   \n\n    const getMemeImage = (e)=>{\n        e.preventDefault();\n        const randomNumber = Math.floor(Math.random() * allMemes.length);\n        const url = allMemes[randomNumber].url;\n        console.log(url);\n        setMeme(prevMeme => ({\n            ...prevMeme, \n            randomImage: url\n        }));\n    }\n    \n    return (\n        \n        <div className=\"meme\">\n            <form action=\"\">\n                <input\n                name=\"topText\"\n                 type=\"text\" \n                 className=\"meme__inputs\" \n                 placeholder=\"Top Text\" \n                 onChange={textHandler}\n                 value={meme.topText} \n                 />\n                <input \n                name=\"bottomText\"\n                 type=\"text\"\n                 className=\"meme__inputs\"\n                 placeholder=\"Bottom Text\"\n                 onChange={textHandler}\n                 value={meme.bottomText}\n                 />\n                <button onClick={getMemeImage} className=\"meme__button\">Get a new meme image  ðŸ–¼</button>\n           <div className=\"meme__wrap\">\n            <img className=\"meme__image\" src={meme.randomImage} alt=\"\" />\n             <h2 className=\"meme--text top\" >{meme.topText}</h2>\n            <h2 className=\"meme--text bottom\">{meme.bottomText}</h2>\n           \n            </div>\n              \n           </form>  \n                    \n        </div>\n    )\n}\n\nexport default Meme"],"mappings":"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"},"metadata":{},"sourceType":"module"}